%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Microsoft Windows 7.
%%Title: D:\users\mmottet\Documents\Dropbox\Zombie_project\Pictures\nu-eta-sweep.eps
%%CreationDate: 12/14/2012  14:36:05
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -66   137   662   703
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -66   137   662   703
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0792 8436 csm

    0     0  8737  6789 rc
80 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 8738 6790 rf
6 w
0 -6326 6326 0 0 6326 1196 31 4 MP
PP
-6326 0 0 -6326 6326 0 0 6326 1196 31 5 MP stroke
gs 1197 31 6326 6327 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 1197 32 mt 0 6325 rl 6325 0 rl 0 -6325 rl cp c np
[6325 0 0 6325 1197 32] cc
<< % Image dictionary
  /ImageType 1
  /Width 101 /Height 101
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [101.000000 0 0 101.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
i'#s]h`pQli'$!^n3?G)i]Q3`l9=\;h#Yn)lN#<5iWA9C`W>T2j8c^ki;gLkh>k:kgAo(kf`8qkf)Wek
ec<_ke,[Skdf@MkdK%Gkd/_AkciD;kciD;kcN)5kcN)5kcN)5kcN)5kc2c/kcN)5kcN)5kcN)5kcN)5k
ciD;kciD;kciD;kd/_Akd/_AkdK%GkdK%Gkdf@Mke,[Ske,[SkeH!YkeH!Ykec<_kf)WekfDrkkfDrkk
f`8qkg&T"kgAo(kgAo(kg]5.kh#P4kh>k:khZ1@khuLFkhuLFki;gLkiW-RkirHXkj8c^kj8c^kjT)dk
joDjkk5_pkkQ&!kklA'kklA'klN"3klN"3kli=9km/X?kmJsEkmf9Kkmf9Kkn,TQknGoWknc5]ko)Pck
oDkiko`1okp&LukpAh&kpAh&kp].,kq#I2kq>d8kqZ*>kquEDkr;`JkrW&PkrW&Pk!<<+k!<<+N!J(9&
!J(9&!J(9&!J(9P!It
~>
gr
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

4279 6663 mt 
(nu) s
 775 3295 mt  -90 rotate
(eta) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1180 6400 mt 
( ) s
7506   73 mt 
( ) s
4 w
DO
SO
6 w
1196 6357 mt 7522 6357 L
1196   31 mt 7522   31 L
7522   31 mt 7522 6357 L
1196   31 mt 1196 6357 L
1196 6357 mt 7522 6357 L
1196   31 mt 1196 6357 L
1228 6357 mt 1228 6293 L
1228   31 mt 1228   95 L
1195 6502 mt 
(0) s
1854 6357 mt 1854 6293 L
1854   31 mt 1854   95 L
1704 6502 mt 
(0.005) s
2480 6357 mt 2480 6293 L
2480   31 mt 2480   95 L
2364 6502 mt 
(0.01) s
3107 6357 mt 3107 6293 L
3107   31 mt 3107   95 L
2957 6502 mt 
(0.015) s
3733 6357 mt 3733 6293 L
3733   31 mt 3733   95 L
3617 6502 mt 
(0.02) s
4359 6357 mt 4359 6293 L
4359   31 mt 4359   95 L
4209 6502 mt 
(0.025) s
4985 6357 mt 4985 6293 L
4985   31 mt 4985   95 L
4869 6502 mt 
(0.03) s
5611 6357 mt 5611 6293 L
5611   31 mt 5611   95 L
5461 6502 mt 
(0.035) s
6238 6357 mt 6238 6293 L
6238   31 mt 6238   95 L
6122 6502 mt 
(0.04) s
6864 6357 mt 6864 6293 L
6864   31 mt 6864   95 L
6714 6502 mt 
(0.045) s
7490 6357 mt 7490 6293 L
7490   31 mt 7490   95 L
7374 6502 mt 
(0.05) s
1196   63 mt 1260   63 L
7522   63 mt 7458   63 L
1096  107 mt 
(0) s
1196  689 mt 1260  689 L
7522  689 mt 7458  689 L
 862  733 mt 
(0.005) s
1196 1315 mt 1260 1315 L
7522 1315 mt 7458 1315 L
 929 1359 mt 
(0.01) s
1196 1942 mt 1260 1942 L
7522 1942 mt 7458 1942 L
 862 1986 mt 
(0.015) s
1196 2568 mt 1260 2568 L
7522 2568 mt 7458 2568 L
 929 2612 mt 
(0.02) s
1196 3194 mt 1260 3194 L
7522 3194 mt 7458 3194 L
 862 3238 mt 
(0.025) s
1196 3820 mt 1260 3820 L
7522 3820 mt 7458 3820 L
 929 3864 mt 
(0.03) s
1196 4446 mt 1260 4446 L
7522 4446 mt 7458 4446 L
 862 4490 mt 
(0.035) s
1196 5073 mt 1260 5073 L
7522 5073 mt 7458 5073 L
 929 5117 mt 
(0.04) s
1196 5699 mt 1260 5699 L
7522 5699 mt 7458 5699 L
 862 5743 mt 
(0.045) s
1196 6325 mt 1260 6325 L
7522 6325 mt 7458 6325 L
 929 6369 mt 
(0.05) s
1196 6357 mt 7522 6357 L
1196   31 mt 7522   31 L
7522   31 mt 7522 6357 L
1196   31 mt 1196 6357 L
1 sg
0 6327 240 0 0 -6327 7703 6358 4 MP
PP
-240 0 0 6327 240 0 0 -6327 7703 6358 5 MP stroke
gs 7703 31 241 6328 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 7703 31 mt 0 6327 rl 240 0 rl 0 -6327 rl cp c np
[240 0 0 6327 7703 31] cc
<< % Image dictionary
  /ImageType 1
  /Width 1 /Height 64
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [1.000000 0 0 64.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
5<h=p4?GSa3&``Q1c$mA0J>%1/1W2!-mp>f,U4KV+<MXF*#fe6(`*r&'GD)k&.]6[$k!CK#R:P;"9S]+
!.Y
~>
gr
gr

4 w
DO
SO
6 w
0 sg
7703   31 mt 7943   31 L
7703 6358 mt 7943 6358 L
7943 6358 mt 7943   31 L
7703 6358 mt 7703   31 L
7703 6358 mt 7943 6358 L
7943 6358 mt 7943   31 L
7943 6279 mt 7879 6279 L
7703 6279 mt 7766 6279 L
7977 6323 mt 
(200) s
7943 5644 mt 7879 5644 L
7703 5644 mt 7766 5644 L
7977 5688 mt 
(400) s
7943 5009 mt 7879 5009 L
7703 5009 mt 7766 5009 L
7977 5053 mt 
(600) s
7943 4374 mt 7879 4374 L
7703 4374 mt 7766 4374 L
7977 4418 mt 
(800) s
7943 3738 mt 7879 3738 L
7703 3738 mt 7766 3738 L
7977 3782 mt 
(1000) s
7943 3103 mt 7879 3103 L
7703 3103 mt 7766 3103 L
7977 3147 mt 
(1200) s
7943 2468 mt 7879 2468 L
7703 2468 mt 7766 2468 L
7977 2512 mt 
(1400) s
7943 1833 mt 7879 1833 L
7703 1833 mt 7766 1833 L
7977 1877 mt 
(1600) s
7943 1197 mt 7879 1197 L
7703 1197 mt 7766 1197 L
7977 1241 mt 
(1800) s
7943  562 mt 7879  562 L
7703  562 mt 7766  562 L
7977  606 mt 
(2000) s
7703   31 mt 7943   31 L
7703 6358 mt 7943 6358 L
7943 6358 mt 7943   31 L
7703 6358 mt 7703   31 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
