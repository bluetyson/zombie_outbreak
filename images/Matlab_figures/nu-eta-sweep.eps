%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Microsoft Windows 7.
%%Title: D:\users\mmottet\Documents\ETHZ\GESS\GitHub\zombie_outbreak\images\Matlab figures\nu-eta-sweep.eps
%%CreationDate: 12/14/2012  16:10:56
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -66   139   662   701
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -66   139   662   701
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0792 8412 csm

    0     0  8737  6735 rc
80 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 8738 6736 rf
6 w
0 -6275 6274 0 0 6275 1222 31 4 MP
PP
-6274 0 0 -6275 6274 0 0 6275 1222 31 5 MP stroke
gs 1222 31 6275 6276 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 1222 32 mt 0 6274 rl 6275 0 rl 0 -6274 rl cp c np
[6275 0 0 6274 1222 32] cc
<< % Image dictionary
  /ImageType 1
  /Width 101 /Height 101
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [101.000000 0 0 101.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
i'#s]h`pQli'$!^n3?G)i]Q3`l9=\;h#Yn)lN#<5iWA9C`W>T2j8c^ki;gLkh>k:kgAo(kf`8qkf)Wek
ec<_ke,[Skdf@MkdK%Gkd/_AkciD;kciD;kcN)5kcN)5kcN)5kcN)5kc2c/kcN)5kcN)5kcN)5kcN)5k
ciD;kciD;kciD;kd/_Akd/_AkdK%GkdK%Gkdf@Mke,[Ske,[SkeH!YkeH!Ykec<_kf)WekfDrkkfDrkk
f`8qkg&T"kgAo(kgAo(kg]5.kh#P4kh>k:khZ1@khuLFkhuLFki;gLkiW-RkirHXkj8c^kj8c^kjT)dk
joDjkk5_pkkQ&!kklA'kklA'klN"3klN"3kli=9km/X?kmJsEkmf9Kkmf9Kkn,TQknGoWknc5]ko)Pck
oDkiko`1okp&LukpAh&kpAh&kp].,kq#I2kq>d8kqZ*>kquEDkr;`JkrW&PkrW&Pk!<<+k!<<+N!J(9&
!J(9&!J(9&!J(9P!It
~>
gr
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

4279 6612 mt 
(nu) s
 800 3270 mt  -90 rotate
(eta) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1205 6349 mt 
( ) s
7480   73 mt 
( ) s
4 w
DO
SO
6 w
1222 6306 mt 7496 6306 L
1222   31 mt 7496   31 L
7496   31 mt 7496 6306 L
1222   31 mt 1222 6306 L
1222 6306 mt 7496 6306 L
1222   31 mt 1222 6306 L
1253 6306 mt 1253 6243 L
1253   31 mt 1253   94 L
1220 6451 mt 
(0) s
1874 6306 mt 1874 6243 L
1874   31 mt 1874   94 L
1724 6451 mt 
(0.005) s
2495 6306 mt 2495 6243 L
2495   31 mt 2495   94 L
2379 6451 mt 
(0.01) s
3117 6306 mt 3117 6243 L
3117   31 mt 3117   94 L
2967 6451 mt 
(0.015) s
3738 6306 mt 3738 6243 L
3738   31 mt 3738   94 L
3622 6451 mt 
(0.02) s
4359 6306 mt 4359 6243 L
4359   31 mt 4359   94 L
4209 6451 mt 
(0.025) s
4980 6306 mt 4980 6243 L
4980   31 mt 4980   94 L
4864 6451 mt 
(0.03) s
5601 6306 mt 5601 6243 L
5601   31 mt 5601   94 L
5451 6451 mt 
(0.035) s
6223 6306 mt 6223 6243 L
6223   31 mt 6223   94 L
6107 6451 mt 
(0.04) s
6844 6306 mt 6844 6243 L
6844   31 mt 6844   94 L
6694 6451 mt 
(0.045) s
7465 6306 mt 7465 6243 L
7465   31 mt 7465   94 L
7349 6451 mt 
(0.05) s
1222   63 mt 1285   63 L
7496   63 mt 7433   63 L
1121  107 mt 
(0) s
1222  684 mt 1285  684 L
7496  684 mt 7433  684 L
 887  728 mt 
(0.005) s
1222 1305 mt 1285 1305 L
7496 1305 mt 7433 1305 L
 954 1349 mt 
(0.01) s
1222 1926 mt 1285 1926 L
7496 1926 mt 7433 1926 L
 887 1970 mt 
(0.015) s
1222 2547 mt 1285 2547 L
7496 2547 mt 7433 2547 L
 954 2591 mt 
(0.02) s
1222 3169 mt 1285 3169 L
7496 3169 mt 7433 3169 L
 887 3213 mt 
(0.025) s
1222 3790 mt 1285 3790 L
7496 3790 mt 7433 3790 L
 954 3834 mt 
(0.03) s
1222 4411 mt 1285 4411 L
7496 4411 mt 7433 4411 L
 887 4455 mt 
(0.035) s
1222 5032 mt 1285 5032 L
7496 5032 mt 7433 5032 L
 954 5076 mt 
(0.04) s
1222 5653 mt 1285 5653 L
7496 5653 mt 7433 5653 L
 887 5697 mt 
(0.045) s
1222 6274 mt 1285 6274 L
7496 6274 mt 7433 6274 L
 954 6318 mt 
(0.05) s
1222 6306 mt 7496 6306 L
1222   31 mt 7496   31 L
7496   31 mt 7496 6306 L
1222   31 mt 1222 6306 L
1 sg
0 6276 240 0 0 -6276 7676 6307 4 MP
PP
-240 0 0 6276 240 0 0 -6276 7676 6307 5 MP stroke
gs 7676 31 241 6277 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 7676 31 mt 0 6276 rl 240 0 rl 0 -6276 rl cp c np
[240 0 0 6276 7676 31] cc
<< % Image dictionary
  /ImageType 1
  /Width 1 /Height 64
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [1.000000 0 0 64.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
5<h=p4?GSa3&``Q1c$mA0J>%1/1W2!-mp>f,U4KV+<MXF*#fe6(`*r&'GD)k&.]6[$k!CK#R:P;"9S]+
!.Y
~>
gr
gr

4 w
DO
SO
6 w
0 sg
7676   31 mt 7916   31 L
7676 6307 mt 7916 6307 L
7916 6307 mt 7916   31 L
7676 6307 mt 7676   31 L
7676 6307 mt 7916 6307 L
7916 6307 mt 7916   31 L
7916 6229 mt 7853 6229 L
7676 6229 mt 7738 6229 L
7950 6273 mt 
(200) s
7916 5599 mt 7853 5599 L
7676 5599 mt 7738 5599 L
7950 5643 mt 
(400) s
7916 4969 mt 7853 4969 L
7676 4969 mt 7738 4969 L
7950 5013 mt 
(600) s
7916 4339 mt 7853 4339 L
7676 4339 mt 7738 4339 L
7950 4383 mt 
(800) s
7916 3708 mt 7853 3708 L
7676 3708 mt 7738 3708 L
7950 3752 mt 
(1000) s
7916 3078 mt 7853 3078 L
7676 3078 mt 7738 3078 L
7950 3122 mt 
(1200) s
7916 2448 mt 7853 2448 L
7676 2448 mt 7738 2448 L
7950 2492 mt 
(1400) s
7916 1818 mt 7853 1818 L
7676 1818 mt 7738 1818 L
7950 1862 mt 
(1600) s
7916 1188 mt 7853 1188 L
7676 1188 mt 7738 1188 L
7950 1232 mt 
(1800) s
7916  558 mt 7853  558 L
7676  558 mt 7738  558 L
7950  602 mt 
(2000) s
7676   31 mt 7916   31 L
7676 6307 mt 7916 6307 L
7916 6307 mt 7916   31 L
7676 6307 mt 7676   31 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
